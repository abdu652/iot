<!DOCTYPE html>
<html>
<head>
<title>W3.CSS Template</title>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://www.w3schools.com/lib/w3-theme-blue-grey.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.min.css">

<script src="/socket.io/socket.io.js"></script>
</head>
<body>


<!-- Header -->
<header class="w3-container w3-theme w3-padding" id="myHeader">
  <i onclick="w3_open()" class="fa fa-bars w3-xlarge w3-button w3-theme"></i> 
  <div class="w3-center">
  <h4>MONITOR STATE OF SENSORS AT HOME</h4>
  <h1 class="w3-xxxlarge w3-animate-bottom">HOME AUTOMATION PROJECT</h1>
    <div class="w3-padding-32">
    
    
    <div class="search-container">
    <!-- <form action="/action_page.php"> -->
    
    <div class="w3-dropdown-hover">
	    <button class="w3-button w3-black">Choose time</button>
	    <div class="w3-dropdown-content w3-bar-block w3-border">
     
			<label class="w3-bar-item w3-button">
			    <input type="radio" name="option" value="minute" onclick="displaySelected()"> minutes
			</label><br>
			<label class="w3-bar-item w3-button">
			    <input type="radio" name="option" value="hour" onclick="displaySelected()"> hours
			</label><br>
			<label class="w3-bar-item w3-button">
			    <input type="radio" name="option" value="day" onclick="displaySelected()"> days
			</label><br>
			<label class="w3-bar-item w3-button">
			    <input type="radio" name="option" value="year" onclick="displaySelected()">years
			</label>
      
	    </div>
    </div>
    
      <input id="search" type="text" placeholder="Search.." name="search" 
      class="w3-round-xxlarge w3-white w3-text-dark w3-border-0 w3-large w3-padding">
      <button type="submit" class="w3-btn w3-black w3-round-large" onclick="searchBut()">
      <i class="fa fa-search" onclick="" style="font-weight:900;"></i></button>
      
    <!-- </form> -->
  </div>
    
    </div>
  </div>
</header>



<div class="w3-container">


<div class="w3-container">
  <hr>
  <div class="w3-center">
    <h2>Sensor Data Record</h2>
    <p w3-class="w3-large"><span id="selectedOption">None</span></p>
  </div>
<div class="w3-responsive w3-card-4">

<table class="w3-table w3-striped w3-bordered">
<thead>
<tr class="w3-teal ">
  <th>Time</th><th>Temperature</th><th>Pressure</th><th>Air Quality</th><th>Light Control</th>
</tr>
</thead>

<tbody id="tableBody">

<!-- data inject from index.js -->
<% data.forEach(item => { %>
  <tr class="w3-white">
    <td><%= item.timestamp %></td>
    <td><%= item.temperature %></td>
    <td><%= item.pressure %></td>
    <td><%= item.air_quality %></td>
    <td><%= item.light_intensity %></td>
</tr>
<% }); %>

</tbody>
</table>


</div>

<hr>



<!-- Footer -->
<footer class="w3-container w3-theme-teal w3-padding-16">
  <h3>Footer</h3>
  <p>Powered by <a href="https://www.w3schools.com/w3css/default.asp" target="_blank">w3.css</a></p>
  <div style="position:relative;bottom:55px;" class="w3-tooltip w3-right">
    <span class="w3-text w3-theme-light w3-padding">Go To Top</span>    
    <a class="w3-text-white" href="#myHeader"><span class="w3-xlarge">
    <i class="fa fa-chevron-circle-up"></i></span></a>
  </div>
  <p>Remember to check out our  <a href="w3css_references.asp" class="w3-btn w3-theme-light" target="_blank">W3.CSS Reference</a></p>
</footer>

<!-- Script for Sidebar, Tabs, Accordions, Progress bars and slideshows -->
<script>
// Side navigation
function w3_open() {
  var x = document.getElementById("mySidebar");
  x.style.width = "100%";
  x.style.fontSize = "40px";
  x.style.paddingTop = "10%";
  x.style.display = "block";
}
function w3_close() {
  document.getElementById("mySidebar").style.display = "none";
}

// Tabs
function openCity(evt, cityName) {
  var i;
  var x = document.getElementsByClassName("city");
  for (i = 0; i < x.length; i++) {
    x[i].style.display = "none";
  }
  var activebtn = document.getElementsByClassName("testbtn");
  for (i = 0; i < x.length; i++) {
    activebtn[i].className = activebtn[i].className.replace(" w3-dark-grey", "");
  }
  document.getElementById(cityName).style.display = "block";
  evt.currentTarget.className += " w3-dark-grey";
}

var mybtn = document.getElementsByClassName("testbtn")[0];
mybtn.click();

// Accordions
function myAccFunc(id) {
  var x = document.getElementById(id);
  if (x.className.indexOf("w3-show") == -1) {
    x.className += " w3-show";
  } else { 
    x.className = x.className.replace(" w3-show", "");
  }
}

// Slideshows
var slideIndex = 1;

function plusDivs(n) {
  slideIndex = slideIndex + n;
  showDivs(slideIndex);
}

function showDivs(n) {
  var x = document.getElementsByClassName("mySlides");
  if (n > x.length) {slideIndex = 1}    
  if (n < 1) {slideIndex = x.length} ;
  for (i = 0; i < x.length; i++) {
    x[i].style.display = "none";  
  }
  x[slideIndex-1].style.display = "block";  
}

showDivs(1);

// Progress Bars
function move() {
  var elem = document.getElementById("myBar");   
  var width = 5;
  var id = setInterval(frame, 10);
  function frame() {
    if (width == 100) {
      clearInterval(id);
    } else {
      width++; 
      elem.style.width = width + '%'; 
      elem.innerHTML = width * 1  + '%';
    }
  }
}
</script>






<script>

  const socket = io();



  socket.on('recRange', (db) => {
      console.log('back to html from server', db);
     addSensorContent(db);
  });

  
  // Handle search enquiry
  // and data display
  function displaySelected() {
      const options = document.getElementsByName('option');
      let selectedValue = 'None';
      for (const option of options) {
          if (option.checked) {
              selectedValue = option.value;
              break;
          }
      }
      document.getElementById('selectedOption').innerText = selectedValue;
  }


  function searchBut() {

      const searchInput = document.getElementById('search').value.trim();
      const searchTimes = searchInput.split(',');

      if (!searchTimes[0]) {
          alert('Input field is empty');
          return;
      }

      if (searchTimes.length === 2 && searchTimes[0] && searchTimes[1]) {
          const times = {
              timeStart: searchTimes[0].trim(),
              timeEnd: searchTimes[1].trim()
          };

          socket.emit('searchTimeRange', times);
          console.log(`timeStart: ${times.timeStart}, timeEnd: ${times.timeEnd}`);
      } else {
          alert('Please enter a valid time range in the format "start,end" (e.g., "1,2")');
      }
  }

 

  function addSensorContent(content) {
    // Get the existing tbody element
    const tbody = document.getElementById("tableBody");
    
    // Create a new tbody element to replace the existing one
    const newTbody = document.createElement('tbody');
    newTbody.id = 'tableBody'; // Make sure the new tbody has the same ID

    // Iterate through the content array to create rows and cells
    content.forEach(element => {
        const tr = document.createElement('tr');
        
        // Create and populate td elements
        const timeStamp = document.createElement('td');
        const temperature = document.createElement('td');
        const pressure = document.createElement('td');
        const air_quality = document.createElement('td');
        const light_intensity = document.createElement('td');

        timeStamp.textContent = element.timestamp;  // Correct key is 'timestamp'
        temperature.textContent = element.temperature;
        pressure.textContent = element.pressure;
        air_quality.textContent = element.air_quality;
        light_intensity.textContent = element.light_intensity;

        // Append td elements to the tr
        tr.appendChild(timeStamp);
        tr.appendChild(temperature);
        tr.appendChild(pressure);
        tr.appendChild(air_quality);
        tr.appendChild(light_intensity);

        // Add class to the tr
        tr.className = "w3-white";

        // Append tr to the new tbody
        newTbody.appendChild(tr);
    });

    // Replace the old tbody with the new tbody
    tbody.parentNode.replaceChild(newTbody, tbody);
}

    </script>

</body>
</html>

